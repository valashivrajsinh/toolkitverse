import Link from 'next/link'
import { Calendar, Clock, Tag, TrendingUp, BookOpen, Search } from 'lucide-react'
import { useState } from 'react';

// This would typically come from a CMS or markdown files
const blogPosts = [
  {
    slug: 'best-programming-languages-2024',
    title: 'The Best Programming Languages to Learn in 2024',
    excerpt: 'Discover which programming languages are in high demand and offer the best career prospects for developers in 2024.',
    author: 'Tech Team',
    publishedAt: '2024-01-15',
    readTime: '8 min read',
    category: 'Programming',
    tags: ['JavaScript', 'Python', 'TypeScript', 'Career'],
    featured: true,
    image: '/blog/programming-languages-2024.jpg'
  },
  {
    slug: 'effective-study-techniques-students',
    title: 'Effective Study Techniques Every Student Should Know',
    excerpt: 'Research-backed study methods and techniques that can help students improve their learning efficiency and academic performance.',
    author: 'Education Team',
    publishedAt: '2024-01-10',
    readTime: '6 min read',
    category: 'Education',
    tags: ['Study Tips', 'Productivity', 'Learning', 'Academic Success'],
    featured: true,
    image: '/blog/study-techniques.jpg'
  },
  {
    slug: 'building-first-react-app',
    title: 'Building Your First React Application: A Complete Guide',
    excerpt: 'Step-by-step tutorial on creating your first React application, from setup to deployment.',
    author: 'Dev Team',
    publishedAt: '2024-01-08',
    readTime: '12 min read',
    category: 'Web Development',
    tags: ['React', 'JavaScript', 'Tutorial', 'Beginner'],
    featured: false,
    image: '/blog/react-guide.jpg'
  },
  {
    slug: 'time-management-tips-students',
    title: 'Time Management Tips for Busy Students',
    excerpt: 'Practical strategies to help students balance academics, work, and personal life effectively.',
    author: 'Productivity Team',
    publishedAt: '2024-01-05',
    readTime: '5 min read',
    category: 'Productivity',
    tags: ['Time Management', 'Student Life', 'Organization', 'Balance'],
    featured: false,
    image: '/blog/time-management.jpg'
  },
  {
    slug: 'css-grid-flexbox-comparison',
    title: 'CSS Grid vs Flexbox: When to Use Each',
    excerpt: 'A comprehensive comparison of CSS Grid and Flexbox, with practical examples and use cases.',
    author: 'Design Team',
    publishedAt: '2024-01-03',
    readTime: '10 min read',
    category: 'Web Design',
    tags: ['CSS', 'Layout', 'Grid', 'Flexbox'],
    featured: false,
    image: '/blog/css-layout.jpg'
  },
  {
    slug: 'financial-planning-students',
    title: 'Financial Planning 101 for College Students',
    excerpt: 'Essential financial tips and tools to help students manage money, budget effectively, and plan for the future.',
    author: 'Finance Team',
    publishedAt: '2024-01-01',
    readTime: '7 min read',
    category: 'Finance',
    tags: ['Finance', 'Budgeting', 'Student Life', 'Money Management'],
    featured: false,
    image: '/blog/financial-planning.jpg'
  }
]

const categories = [
  'All',
  'Programming',
  'Education',
  'Web Development', 
  'Productivity',
  'Web Design',
  'Finance'
]

const popularTags = [
  'JavaScript', 'React', 'Python', 'Study Tips', 'Career', 'CSS', 'Tutorial', 
  'Productivity', 'Student Life', 'Finance', 'Time Management', 'Learning'
]

function isRelevantBlog(content: string, category: string) {
  // Simple relevance check: must mention category or related keywords
  return content.toLowerCase().includes(category.toLowerCase());
}

export default function BlogPage() {
  const [userBlog, setUserBlog] = useState({
    title: '',
    content: '',
    category: categories[1],
    error: '',
    success: ''
  });

  // Placeholder: In production, fetch/generate a new blog post daily and merge with blogPosts
  // Example: const allPosts = [...autoGeneratedPosts, ...userSubmittedPosts, ...blogPosts];

  const handleUserBlogSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!isRelevantBlog(userBlog.content, userBlog.category)) {
      setUserBlog({ ...userBlog, error: 'Blog content must be relevant to the selected category.', success: '' });
      return;
    }
    // In production, send to backend for moderation/storage
    setUserBlog({ title: '', content: '', category: categories[1], error: '', success: 'Blog submitted for review!' });
  };

  const featuredPosts = blogPosts.filter(post => post.featured)
  const recentPosts = blogPosts.filter(post => !post.featured)

  return (
    <div className="min-h-screen py-12 px-4 bg-gray-50 dark:bg-gray-900">
      <div className="container mx-auto max-w-6xl">
        {/* Header */}
        <div className="text-center mb-16">
          <div className="flex items-center justify-center gap-3 mb-6">
            <BookOpen className="w-12 h-12 text-blue-600 dark:text-blue-400" />
            <h1 className="text-4xl md:text-6xl font-bold text-gray-900 dark:text-white">
              ToolkitVerse Blog
            </h1>
          </div>
          <p className="text-xl md:text-2xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto leading-relaxed">
            Stay updated with the latest in technology, productivity tips, study guides, and career advice. 
            Written by experts for students and developers.
          </p>
        </div>

        {/* Search and Filter */}
        <div className="mb-12">
          <div className="flex flex-col lg:flex-row gap-6 items-center justify-between">
            {/* Search */}
            <div className="relative flex-1 max-w-md">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
              <input
                type="text"
                placeholder="Search articles..."
                className="w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-800 text-gray-900 dark:text-white"
              />
            </div>

            {/* Categories */}
            <div className="flex flex-wrap gap-2">
              {categories.map((category) => (
                <button
                  key={category}
                  className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${
                    category === 'All'
                      ? 'bg-blue-600 text-white'
                      : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700'
                  }`}
                >
                  {category}
                </button>
              ))}
            </div>
          </div>
        </div>

        {/* Featured Posts */}
        <section className="mb-16">
          <div className="flex items-center gap-3 mb-8">
            <TrendingUp className="w-6 h-6 text-orange-600 dark:text-orange-400" />
            <h2 className="text-3xl font-bold text-gray-900 dark:text-white">
              Featured Articles
            </h2>
          </div>
          
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {featuredPosts.map((post) => (
              <article
                key={post.slug}
                className="bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300"
              >
                <div className="aspect-video bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center">
                  <div className="text-white text-center p-8">
                    <BookOpen className="w-16 h-16 mx-auto mb-4 opacity-80" />
                    <p className="text-sm opacity-90">Featured Article</p>
                  </div>
                </div>
                
                <div className="p-8">
                  <div className="flex items-center gap-4 mb-4">
                    <span className="bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 px-3 py-1 rounded-full text-sm font-medium">
                      {post.category}
                    </span>
                    <div className="flex items-center gap-2 text-gray-500 text-sm">
                      <Calendar className="w-4 h-4" />
                      {new Date(post.publishedAt).toLocaleDateString('en-US', {
                        month: 'short',
                        day: 'numeric',
                        year: 'numeric'
                      })}
                    </div>
                  </div>

                  <h3 className="text-2xl font-bold text-gray-900 dark:text-white mb-3 leading-tight">
                    <Link 
                      href={`/blog/${post.slug}`}
                      className="hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
                    >
                      {post.title}
                    </Link>
                  </h3>

                  <p className="text-gray-600 dark:text-gray-400 mb-4 leading-relaxed">
                    {post.excerpt}
                  </p>

                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-2 text-gray-500 text-sm">
                      <Clock className="w-4 h-4" />
                      {post.readTime}
                    </div>
                    <Link
                      href={`/blog/${post.slug}`}
                      className="text-blue-600 dark:text-blue-400 font-medium hover:underline"
                    >
                      Read More â†’
                    </Link>
                  </div>
                </div>
              </article>
            ))}
          </div>
        </section>

        {/* Recent Posts */}
        <section className="mb-16">
          <h2 className="text-3xl font-bold text-gray-900 dark:text-white mb-8">
            Latest Articles
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {recentPosts.map((post) => (
              <article
                key={post.slug}
                className="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300"
              >
                <div className="aspect-video bg-gradient-to-br from-gray-400 to-gray-600 flex items-center justify-center">
                  <BookOpen className="w-12 h-12 text-white opacity-80" />
                </div>
                
                <div className="p-6">
                  <div className="flex items-center gap-3 mb-3">
                    <span className="bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-2 py-1 rounded text-sm">
                      {post.category}
                    </span>
                    <div className="flex items-center gap-1 text-gray-500 text-sm">
                      <Calendar className="w-3 h-3" />
                      {new Date(post.publishedAt).toLocaleDateString('en-US', {
                        month: 'short',
                        day: 'numeric'
                      })}
                    </div>
                  </div>

                  <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-2 leading-tight">
                    <Link 
                      href={`/blog/${post.slug}`}
                      className="hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
                    >
                      {post.title}
                    </Link>
                  </h3>

                  <p className="text-gray-600 dark:text-gray-400 text-sm mb-4 leading-relaxed">
                    {post.excerpt.substring(0, 100)}...
                  </p>

                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-1 text-gray-500 text-sm">
                      <Clock className="w-3 h-3" />
                      {post.readTime}
                    </div>
                    <Link
                      href={`/blog/${post.slug}`}
                      className="text-blue-600 dark:text-blue-400 text-sm font-medium hover:underline"
                    >
                      Read â†’
                    </Link>
                  </div>
                </div>
              </article>
            ))}
          </div>
        </section>

        {/* Popular Tags */}
        <section className="mb-16">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-6">
            Popular Topics
          </h2>
          <div className="flex flex-wrap gap-3">
            {popularTags.map((tag) => (
              <Link
                key={tag}
                href={`/blog?tag=${tag.toLowerCase().replace(' ', '-')}`}
                className="flex items-center gap-2 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 px-4 py-2 rounded-full hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
              >
                <Tag className="w-4 h-4 text-gray-500" />
                <span className="text-gray-700 dark:text-gray-300">{tag}</span>
              </Link>
            ))}
          </div>
        </section>

        {/* Newsletter Signup */}
        <section className="bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl p-12 text-white text-center">
          <h2 className="text-3xl md:text-4xl font-bold mb-6">
            Never Miss an Update
          </h2>
          <p className="text-xl text-blue-100 mb-8 max-w-2xl mx-auto">
            Subscribe to our newsletter and get the latest articles, tutorials, and resources 
            delivered straight to your inbox.
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center max-w-md mx-auto">
            <input
              type="email"
              placeholder="Enter your email"
              className="flex-1 px-4 py-3 rounded-lg text-gray-900 border-0 focus:ring-4 focus:ring-blue-300"
            />
            <button className="bg-white text-blue-600 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors">
              Subscribe
            </button>
          </div>
          <p className="text-blue-200 text-sm mt-4">
            No spam, unsubscribe at any time.
          </p>
        </section>

        {/* User Blog Submission Form */}
        <section className="mb-16">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-4">Submit Your Blog</h2>
          <form onSubmit={handleUserBlogSubmit} className="bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-4">
            <div className="mb-4">
              <label className="block mb-1 font-semibold">Title</label>
              <input type="text" value={userBlog.title} onChange={e => setUserBlog({ ...userBlog, title: e.target.value })} required className="w-full px-3 py-2 rounded border border-gray-300 dark:border-gray-700 bg-gray-50 dark:bg-gray-900" />
            </div>
            <div className="mb-4">
              <label className="block mb-1 font-semibold">Category</label>
              <select value={userBlog.category} onChange={e => setUserBlog({ ...userBlog, category: e.target.value })} className="w-full px-3 py-2 rounded border border-gray-300 dark:border-gray-700 bg-gray-50 dark:bg-gray-900">
                {categories.slice(1).map(cat => (
                  <option key={cat} value={cat}>{cat}</option>
                ))}
              </select>
            </div>
            <div className="mb-4">
              <label className="block mb-1 font-semibold">Content</label>
              <textarea value={userBlog.content} onChange={e => setUserBlog({ ...userBlog, content: e.target.value })} required rows={6} className="w-full px-3 py-2 rounded border border-gray-300 dark:border-gray-700 bg-gray-50 dark:bg-gray-900" />
            </div>
            {userBlog.error && <p className="text-red-600 mb-2">{userBlog.error}</p>}
            {userBlog.success && <p className="text-green-600 mb-2">{userBlog.success}</p>}
            <button type="submit" className="bg-blue-600 text-white px-6 py-2 rounded font-semibold hover:bg-blue-700">Submit Blog</button>
          </form>
          <p className="text-gray-500 text-sm">Blogs must be relevant to the selected category and will be reviewed before publishing.</p>
        </section>
      </div>
    </div>
  )
}
